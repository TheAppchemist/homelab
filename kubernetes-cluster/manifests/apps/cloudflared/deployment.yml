apiVersion: apps/v1
kind: Deployment
metadata:
  name: cloudflared-homelabhq
  namespace: dns
spec:
  selector:
    matchLabels:
      app: cloudflared
  replicas: 3 # You could also consider elastic scaling for this deployment
  template:
    metadata:
      labels:
        app: cloudflared
    spec:
      containers:
      - name: cloudflared
        image: cloudflare/cloudflared:latest
        args:
        - tunnel
        - run
        - --token
        - $(CLOUDFLARED_TOKEN)
        env:
        - name: CLOUDFLARED_TOKEN
          valueFrom:
            secretKeyRef:
              name: cloudflare-token
              key: token
        resources:
          limits:
            cpu: "0.1"
            memory: "300Mi"
        # livenessProbe:
        #   httpGet:
        #     # Cloudflared has a /ready endpoint which returns 200 if and only if
        #     # it has an active connection to the edge.
        #     path: /ready
        #     port: 2000
          # failureThreshold: 1
          # initialDelaySeconds: 10
          # periodSeconds: 10
        volumeMounts:
        - name: config
          mountPath: /etc/cloudflared/config
          readOnly: true
      volumes:
      - name: config
        configMap:
          name: cloudflared
          items:
          - key: config.yaml
            path: config.yaml